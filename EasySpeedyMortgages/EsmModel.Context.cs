//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EasySpeedyMortgages
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EasySpeedyMortgagesEntities : DbContext
    {
        public EasySpeedyMortgagesEntities()
            : base("name=EasySpeedyMortgagesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<Applicant> Applicants { get; set; }
        public virtual DbSet<Application> Applications { get; set; }
        public virtual DbSet<Borrower> Borrowers { get; set; }
        public virtual DbSet<Borrowers_Addresses> Borrowers_Addresses { get; set; }
        public virtual DbSet<EmploymentItem> EmploymentItems { get; set; }
        public virtual DbSet<WizardQuestion> WizardQuestions { get; set; }
        public virtual DbSet<Setting> Settings { get; set; }
        public virtual DbSet<PhoneNumber> PhoneNumbers { get; set; }
        public virtual DbSet<Officer> Officers { get; set; }
        public virtual DbSet<Officers_PhoneNumbers> Officers_PhoneNumbers { get; set; }
        public virtual DbSet<CreditQuality> CreditQualities { get; set; }
        public virtual DbSet<InitialBorrowerInfo> InitialBorrowerInfoes { get; set; }
        public virtual DbSet<LoanType> LoanTypes { get; set; }
        public virtual DbSet<EmailLog> EmailLogs { get; set; }
        public virtual DbSet<ShortApplication> ShortApplications { get; set; }
        public virtual DbSet<v_initial_borrower_info> v_initial_borrower_info { get; set; }
    
        public virtual int AddPhoneNumber(string officerKey, string phoneNumber, string description)
        {
            var officerKeyParameter = officerKey != null ?
                new ObjectParameter("OfficerKey", officerKey) :
                new ObjectParameter("OfficerKey", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPhoneNumber", officerKeyParameter, phoneNumberParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<GetOfficer_Result> GetOfficer(string officerKey)
        {
            var officerKeyParameter = officerKey != null ?
                new ObjectParameter("OfficerKey", officerKey) :
                new ObjectParameter("OfficerKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOfficer_Result>("GetOfficer", officerKeyParameter);
        }
    }
}
